import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.time.Duration;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;

public class ExtractNames {
    WebDriver driver;
    @BeforeMethod
    public void setUp(){
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(40, TimeUnit.SECONDS);
    }
    @Test
    public void babyNameList() {
        driver.get("https://www.momjunction.com/baby-names/hindu/");
        driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

        List<WebElement> rows = driver.findElements(By.xpath("//table[@id='from_functions']/tbody/tr"));
        for (WebElement row : rows) {

            WebElement nameElement = row.findElement(By.xpath(".//td[1]/a"));
            String name = nameElement.getText();

            WebElement genderElement = row.findElement(By.xpath(".//td[3]"));
            String gender = genderElement.getText();

            WebElement meaningElement = row.findElement(By.xpath(".//td[4]/span"));
            String meaning = meaningElement.getText();

            System.out.println("Name: " + name);
            System.out.println("Gender: " + gender);
            System.out.println("Meaning: " + meaning);
            System.out.println("-------------------------");

        }
        while (hasNextPage()) {
            driver.findElement(By.className("next")).click();

        }


    }
    private boolean hasNextPage() {
        List<WebElement> nextButtonElements = driver.findElements(By.className("next"));
        if (!nextButtonElements.isEmpty()) {
            WebElement nextButton = nextButtonElements.get(0);
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            wait.until(ExpectedConditions.elementToBeClickable(nextButton));
            return true;
        }
        return false;
    }
    @AfterMethod
    public void tearUp(){
        driver.close();
        driver.quit();
    }
}













 private void extractDataFromCurrentPage(List<WebElement> rows) {
//        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(70));
//
//        for (WebElement row : rows) {
//            String name = wait.until(ExpectedConditions.visibilityOf(row.findElement(By.xpath(".//td[1]//a[@class='baby-name-link']")))).getText();
//            String gender = wait.until(ExpectedConditions.visibilityOf(row.findElement(By.xpath(".//td[3]")))).getText();
//            String meaning = wait.until(ExpectedConditions.visibilityOf(row.findElement(By.xpath(".//td[4]/span")))).getText();
//
//            System.out.println("Name: " + name);
//            System.out.println("Gender: " + gender);
//            System.out.println("Meaning: " + meaning);
//            System.out.println("-------------------------");
//        }
//    }
//----------------------------------------------------------
//    private void extractDataFromCurrentPage(List<WebElement> rows) {
//        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(60));
//
//        for (WebElement row : rows) {
//            WebElement nameElement = row.findElement(By.cssSelector("#from_functions > tbody > tr:nth-child(14)"));
//            WebElement genderElement = row.findElement(By.xpath(".//td[3]"));
//            WebElement meaningElement = row.findElement(By.xpath(".//td[4]/span"));
//
//            // Use explicit waits for individual elements
//            String name = wait.until(ExpectedConditions.visibilityOf(nameElement)).getText();
//            String gender = wait.until(ExpectedConditions.visibilityOf(genderElement)).getText();
//            String meaning = wait.until(ExpectedConditions.visibilityOf(meaningElement)).getText();
//
//            // Log the extracted data
//            System.out.println("Name: " + name);
//            System.out.println("Gender: " + gender);
//            System.out.println("Meaning: " + meaning);
//            System.out.println("-------------------------");
//        }
//    }
